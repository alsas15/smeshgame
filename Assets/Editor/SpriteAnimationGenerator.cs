using UnityEngine;
using UnityEditor;
using UnityEditor.Animations;
using System.IO;
using System.Linq;

public class SpriteAnimationGenerator
{
    [MenuItem("Tools/Generate Sprite Animation")]
    static void GenerateAnimation()
    {
        // –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–æ —Å–ø—Ä–∞–π—Ç–∞–º–∏
        string spriteFolderPath = "Assets/Sprites/Dance/Legs";

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–ø—Ä–∞–π—Ç—ã
        string[] spriteGuids = AssetDatabase.FindAssets("t:Sprite", new[] { spriteFolderPath });
        Sprite[] sprites = spriteGuids
            .Select(guid => AssetDatabase.LoadAssetAtPath<Sprite>(AssetDatabase.GUIDToAssetPath(guid)))
            .OrderBy(s => s.name) // —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∏–º–µ–Ω–∏
            .ToArray();

        if (sprites.Length == 0)
        {
            Debug.LogWarning("No sprites found in folder: " + spriteFolderPath);
            return;
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        AnimationClip clip = new AnimationClip();
        clip.frameRate = 12; // –∫–∞–¥—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É

        EditorCurveBinding spriteBinding = new EditorCurveBinding
        {
            type = typeof(SpriteRenderer),
            path = "",
            propertyName = "m_Sprite"
        };

        ObjectReferenceKeyframe[] keyFrames = new ObjectReferenceKeyframe[sprites.Length];
        for (int i = 0; i < sprites.Length; i++)
        {
            keyFrames[i] = new ObjectReferenceKeyframe
            {
                time = i / clip.frameRate,
                value = sprites[i]
            };
        }

        AnimationUtility.SetObjectReferenceCurve(clip, spriteBinding, keyFrames);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        string animPath = spriteFolderPath + "/AutoGenerated.anim";
        AssetDatabase.CreateAsset(clip, animPath);
        AssetDatabase.SaveAssets();

        Debug.Log("Animation created at: " + animPath);

        // üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –∫ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É
        GameObject selected = Selection.activeGameObject;
        if (selected != null)
        {
            Animator animator = selected.GetComponent<Animator>();
            if (!animator)
                animator = selected.AddComponent<Animator>();

            string controllerPath = spriteFolderPath + "/AutoGeneratedController.controller";
            AnimatorController controller = AnimatorController.CreateAnimatorControllerAtPath(controllerPath);
            controller.AddMotion(clip);
            animator.runtimeAnimatorController = controller;

            Debug.Log("Animation and Animator applied to selected object: " + selected.name);
        }
        else
        {
            Debug.LogWarning("No GameObject selected to apply the animation.");
        }
    }
}
